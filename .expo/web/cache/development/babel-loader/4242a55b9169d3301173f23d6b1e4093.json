{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"iconName\", \"error\", \"onFocus\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport COLORS from \"../context/Colors\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Input = function Input(_ref) {\n  var label = _ref.label,\n    iconName = _ref.iconName,\n    error = _ref.error,\n    _ref$onFocus = _ref.onFocus,\n    _onFocus = _ref$onFocus === void 0 ? function () {} : _ref$onFocus,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setIsFocused = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      marginTop: 5\n    },\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: label\n    }), _jsxs(View, {\n      style: [styles.inputContainer, {\n        borderColor: error ? COLORS.red : isFocused ? COLORS.black : COLORS.lightblue\n      }],\n      children: [_jsx(TextInput, _objectSpread({\n        style: {\n          flex: 1\n        },\n        autoCorrect: false,\n        onFocus: function onFocus() {\n          _onFocus();\n          setIsFocused(true);\n        },\n        onBlur: function onBlur() {\n          setIsFocused(false);\n        }\n      }, props)), _jsx(Ionicons, {\n        name: iconName,\n        style: {\n          fontSize: 22,\n          color: COLORS.lightblue\n        }\n      })]\n    }), error && _jsx(Text, {\n      style: {\n        color: COLORS.red,\n        fontSize: 12,\n        marginTop: 6\n      },\n      children: error\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  label: {\n    marginVertical: 5,\n    fontSize: 16,\n    color: 'grey'\n  },\n  inputContainer: {\n    height: 40,\n    borderWidth: 0.5,\n    paddingHorizontal: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  redBorder: {\n    color: 'red'\n  },\n  grayBorder: {\n    color: 'lightgray'\n  },\n  lightgrayBorder: {\n    color: 'lightgray'\n  }\n});\nexport default Input;","map":{"version":3,"names":["React","useState","DateTimePickerModal","COLORS","Ionicons","Input","label","iconName","error","onFocus","props","isFocused","setIsFocused","marginTop","styles","inputContainer","borderColor","red","black","lightblue","flex","fontSize","color","StyleSheet","create","marginVertical","height","borderWidth","paddingHorizontal","flexDirection","alignItems","backgroundColor","redBorder","grayBorder","lightgrayBorder"],"sources":["D:/Dev/bowling-score-card/src/components/Input.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {StyleSheet, View, Text, TextInput } from \"react-native\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport COLORS from \"../context/Colors\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Input = ({label,iconName, error, onFocus=()=>{}, ...props }) => {\r\n    const [isFocused, setIsFocused] = useState (false)\r\n\r\n    return (\r\n        <View style={{marginTop:5}}>\r\n            <Text style={styles.label}>{label}</Text>\r\n            <View style={[\r\n                styles.inputContainer, \r\n                {\r\n                    borderColor: error \r\n                    ?COLORS.red\r\n                    :isFocused \r\n                    ?COLORS.black\r\n                    :COLORS.lightblue\r\n                    }]}>\r\n                <TextInput \r\n                    style={{flex:1}}\r\n                    autoCorrect={false}\r\n                    onFocus={()=> {\r\n                        onFocus();\r\n                        setIsFocused(true)\r\n                    }}\r\n                    onBlur={()=> {\r\n                        setIsFocused(false)\r\n                    }}\r\n                    {...props}/>\r\n                    \r\n                    <Ionicons \r\n                    name={iconName} \r\n                    style={{fontSize:22, color:COLORS.lightblue}}\r\n                    />\r\n            </View>\r\n            {error && (\r\n                <Text style={{color:COLORS.red, fontSize:12, marginTop:6}}>\r\n                {error}\r\n                </Text>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    label: {\r\n        marginVertical:5,\r\n        fontSize:16,\r\n        color:'grey'        \r\n    },\r\n    inputContainer: {\r\n        height:40,\r\n        borderWidth:0.5,\r\n        paddingHorizontal:0,\r\n        //marginBottom:5,\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        backgroundColor:'white'\r\n\r\n    },\r\n\r\n    redBorder:{\r\n        color:'red',\r\n    },\r\n    grayBorder: {\r\n        color: 'lightgray'\r\n    },\r\n    lightgrayBorder: {\r\n        color: 'lightgray'\r\n    }\r\n\r\n});\r\n\r\nexport default Input;"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAExC,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,OAAOC,MAAM;AACb,SAASC,QAAQ,QAAQ,oBAAoB;AAAC;AAAA;AAE9C,IAAMC,KAAK,GAAG,SAARA,KAAK,OAA2D;EAAA,IAAtDC,KAAK,QAALA,KAAK;IAACC,QAAQ,QAARA,QAAQ;IAAEC,KAAK,QAALA,KAAK;IAAA,oBAAEC,OAAO;IAAPA,QAAO,6BAAC,YAAI,CAAC,CAAC;IAAKC,KAAK;EAC3D,gBAAkCT,QAAQ,CAAE,KAAK,CAAC;IAAA;IAA3CU,SAAS;IAAEC,YAAY;EAE9B,OACI,MAAC,IAAI;IAAC,KAAK,EAAE;MAACC,SAAS,EAAC;IAAC,CAAE;IAAA,WACvB,KAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACR,KAAM;MAAA,UAAEA;IAAK,EAAQ,EACzC,MAAC,IAAI;MAAC,KAAK,EAAE,CACTQ,MAAM,CAACC,cAAc,EACrB;QACIC,WAAW,EAAER,KAAK,GACjBL,MAAM,CAACc,GAAG,GACVN,SAAS,GACTR,MAAM,CAACe,KAAK,GACZf,MAAM,CAACgB;MACR,CAAC,CAAE;MAAA,WACP,KAAC,SAAS;QACN,KAAK,EAAE;UAACC,IAAI,EAAC;QAAC,CAAE;QAChB,WAAW,EAAE,KAAM;QACnB,OAAO,EAAE,mBAAK;UACVX,QAAO,EAAE;UACTG,YAAY,CAAC,IAAI,CAAC;QACtB,CAAE;QACF,MAAM,EAAE,kBAAK;UACTA,YAAY,CAAC,KAAK,CAAC;QACvB;MAAE,GACEF,KAAK,EAAG,EAEZ,KAAC,QAAQ;QACT,IAAI,EAAEH,QAAS;QACf,KAAK,EAAE;UAACc,QAAQ,EAAC,EAAE;UAAEC,KAAK,EAACnB,MAAM,CAACgB;QAAS;MAAE,EAC3C;IAAA,EACH,EACNX,KAAK,IACF,KAAC,IAAI;MAAC,KAAK,EAAE;QAACc,KAAK,EAACnB,MAAM,CAACc,GAAG;QAAEI,QAAQ,EAAC,EAAE;QAAER,SAAS,EAAC;MAAC,CAAE;MAAA,UACzDL;IAAK,EAET;EAAA,EACE;AAEf,CAAC;AAED,IAAMM,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC7BlB,KAAK,EAAE;IACHmB,cAAc,EAAC,CAAC;IAChBJ,QAAQ,EAAC,EAAE;IACXC,KAAK,EAAC;EACV,CAAC;EACDP,cAAc,EAAE;IACZW,MAAM,EAAC,EAAE;IACTC,WAAW,EAAC,GAAG;IACfC,iBAAiB,EAAC,CAAC;IAEnBC,aAAa,EAAC,KAAK;IACnBC,UAAU,EAAC,QAAQ;IACnBC,eAAe,EAAC;EAEpB,CAAC;EAEDC,SAAS,EAAC;IACNV,KAAK,EAAC;EACV,CAAC;EACDW,UAAU,EAAE;IACRX,KAAK,EAAE;EACX,CAAC;EACDY,eAAe,EAAE;IACbZ,KAAK,EAAE;EACX;AAEJ,CAAC,CAAC;AAEF,eAAejB,KAAK"},"metadata":{},"sourceType":"module"}