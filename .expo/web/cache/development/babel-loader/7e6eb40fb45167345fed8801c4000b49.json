{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Ionicons } from '@expo/vector-icons';\nimport GameContext from \"../context/GameContext\";\nimport Input from \"../components/Input\";\nimport Buttons from \"../components/Buttons\";\nimport COLORS from \"../context/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreateGames = function CreateGames(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(GameContext),\n    create = _useContext.create;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    numOfPlayers = _useState2[0],\n    setNumOfPlayers = _useState2[1];\n\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    teamTwoPlayerNames = _useState4[0],\n    setTeamTwoPlayerNames = _useState4[1];\n  var updateTeamTwoPlayers = function updateTeamTwoPlayers(path, value) {\n    setTeamTwoPlayerNames(_objectSpread(_objectSpread({}, teamTwoPlayerNames), {}, _defineProperty({}, path, value)));\n  };\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDate = _useState6[0],\n    setSelectedDate = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    datePickerVisible = _useState8[0],\n    setDatePickerVisible = _useState8[1];\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisible(true);\n  };\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisible(false);\n  };\n  var handleConfirm = function handleConfirm(date) {\n    setSelectedDate(date);\n    hideDatePicker();\n  };\n  var _useState9 = useState({\n      competitionName: \"\",\n      rink: \"\",\n      teamOne: \"\",\n      teamTwo: \"\",\n      teamOnePlayerOne: \"\",\n      teamOnePlayerTwo: \"\",\n      teamOnePlayerThree: \"\",\n      teamOnePlayerFour: \"\",\n      teamTwoPlayerOne: \"\",\n      teamTwoPlayerTwo: \"\",\n      teamTwoPlayerThree: \"\",\n      teamTwoPlayerFour: \"\"\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    inputs = _useState10[0],\n    setInputs = _useState10[1];\n  var _useState11 = useState({}),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  var validate = function validate() {\n    Keyboard.dismiss();\n    if (!inputs.competitionName) {\n      handleError(\"Please input competition name\", 'competitionName');\n    }\n    if (!inputs.rink) {\n      handleError(\"Please input rink no\", 'rink');\n    }\n    if (!inputs.teamOne) {\n      handleError(\"Please input first team name\", 'teamOne');\n    }\n    if (!inputs.teamTwo) {\n      handleError(\"Please input second team name\", 'teamTwo');\n    }\n    if (!inputs.teamOnePlayerOne) {\n      handleError(\"Please input first players name\", 'teamOnePlayerOne');\n    }\n    if (!inputs.teamTwoPlayerOne) {\n      handleError(\"Please input first players name\", 'teamTwoPlayerTwo');\n    } else {\n      create(inputs.competitionName, inputs.rink, inputs.teamOne, inputs.teamTwo, inputs.teamOnePlayerOne, inputs.teamOnePlayerTwo, inputs.teamOnePlayerThree, inputs.teamOnePlayerFour, inputs.teamTwoPlayerOne, inputs.teamTwoPlayerTwo, inputs.teamTwoPlayerThree, inputs.teamTwoPlayerFour, navigation.navigate(\"Previous Games\"));\n    }\n  };\n  var handleOnChange = function handleOnChange(text, input) {\n    setInputs(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, text));\n    });\n    console.log(\"print text\");\n    console.log(text);\n  };\n  var handleError = function handleError(errorMessage, input) {\n    setError(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, errorMessage));\n    });\n  };\n  console.log(\"inputs\");\n  console.log(inputs.teamOnePlayerOne);\n  useEffect(function () {}, [numOfPlayers]);\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \" Create your game \"\n      }), _jsxs(View, {\n        style: styles.innerContainer,\n        children: [_jsx(Input, {\n          label: \"Competition\",\n          placeholder: \"Enter competition name\",\n          returnKeyType: 'done',\n          error: error.competitionName,\n          onChangeText: function onChangeText(text) {\n            return handleOnChange(text, 'competitionName');\n          }\n        }), _jsx(Input, {\n          label: \"Rink No\",\n          keyboardType: \"numeric\",\n          returnKeyType: 'done',\n          placeholder: \"Type rink number\",\n          error: error.rink,\n          onChangeText: function onChangeText(text) {\n            return handleOnChange(text, 'rink');\n          }\n        }), _jsx(Input, {\n          label: \"First team name\",\n          returnKeyType: 'done',\n          placeholder: \"Enter team name\",\n          error: error.teamOne,\n          onChangeText: function onChangeText(text) {\n            return handleOnChange(text, 'teamOne');\n          }\n        }), _jsx(Input, {\n          label: \"Second team name\",\n          returnKeyType: 'next',\n          placeholder: \"Enter team name\",\n          error: error.teamTwo,\n          onChangeText: function onChangeText(text) {\n            return handleOnChange(text, 'teamTwo');\n          }\n        }), _jsxs(View, {\n          style: {},\n          children: [_jsx(Input, {\n            style: {\n              width: '100%'\n            },\n            label: \"Select a date\",\n            onChangeText: function onChangeText(text) {\n              return handleOnChange(text, 'date');\n            },\n            placeholder: selectedDate ? selectedDate.toLocaleDateString() : 'Select a date'\n          }), _jsx(DateTimePickerModal, {\n            isVisible: datePickerVisible,\n            mode: \"date\",\n            locale: \"en_GB\",\n            onConfirm: handleConfirm,\n            onCancel: hideDatePicker\n          }), _jsx(Ionicons, {\n            name: \"calendar-sharp\",\n            size: 32,\n            style: styles.icon,\n            color: \"black\",\n            onPress: showDatePicker\n          })]\n        }), _jsx(Input, {\n          label: \"Select Players\",\n          placeholder: \"Type players name\",\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(text) {\n            {\n              for (var i = 0; i < parseInt(text); i++) {\n                setNumOfPlayers.apply(void 0, _toConsumableArray(numOfPlayers).concat([i]));\n              }\n            }\n          }\n        }), _jsx(Text, {\n          children: numOfPlayers\n        }), _jsx(Text, {\n          style: styles.textLabel,\n          children: \" Team Player names:  \"\n        }), numOfPlayers.map(function (num) {\n          return _jsx(TextInput, {\n            returnKeyType: 'done',\n            autoFocus: true,\n            placeholder: \"Type players name\",\n            value: teamTwoPlayerNames[\"teamTwoPlayer\" + num],\n            onChangeText: function onChangeText(text) {\n              updateTeamTwoPlayers(\"teamTwoPlayer\" + num, text);\n            }\n          }, \"\" + num);\n        }), _jsxs(Text, {\n          style: styles.brandText,\n          children: [\" \", JSON.stringify(teamTwoPlayerNames)]\n        }), _jsx(Input, {\n          label: \"First team Players\",\n          returnKeyType: 'next'\n          ,\n          id: \"ftPlayer1\",\n          placeholder: \"Type first team players name\",\n          onChangeText: function onChangeText(text) {\n            return handleOnChange(text, 'teamOnePlayerOne');\n          }\n        }), _jsx(Input, {\n          label: \"Second team players\",\n          returnKeyType: 'next',\n          autoFocus: true,\n          placeholder: \"Type second team players name\",\n          id: \"stPlayer2\",\n          onChangeText: function onChangeText(text) {\n            return handleOnChange(text, 'teamTwoPlayerOne');\n          }\n        }), _jsx(Buttons, {\n          title: \"Submit\",\n          onPress: function onPress() {\n            validate();\n          }\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: '1',\n    paddingTop: StatusBar.currentHeight\n  },\n  innerContainer: {\n    backgroundColor: 'white',\n    marginTop: 10,\n    padding: 15,\n    borderRadius: 10,\n    marginVertical: 20\n  },\n  scrollView: {\n    paddingTop: 30,\n    paddingHorizontal: 20\n  },\n  icon: {\n    position: 'absolute',\n    top: 38,\n    right: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: COLORS.lightblue\n  },\n  dateContainer: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    margin: 0,\n    padding: 8\n  },\n  heading: {\n    fontSize: 32,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  inputStyle: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  textInput: {\n    fontSize: 20,\n    padding: 10,\n    margin: 5,\n    borderWidth: 1\n  },\n  textLabel: {\n    fontSize: 18,\n    color: 'grey',\n    marginVertical: 10\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 24,\n    borderRadius: 5,\n    backgroundColor: '#3dcf8e',\n    margin: 5\n  },\n  buttonText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'black'\n  }\n});\nexport default CreateGames;","map":{"version":3,"names":["React","useState","useContext","useEffect","DateTimePickerModal","Ionicons","GameContext","Input","Buttons","COLORS","CreateGames","navigation","create","numOfPlayers","setNumOfPlayers","teamTwoPlayerNames","setTeamTwoPlayerNames","updateTeamTwoPlayers","path","value","selectedDate","setSelectedDate","datePickerVisible","setDatePickerVisible","showDatePicker","hideDatePicker","handleConfirm","date","competitionName","rink","teamOne","teamTwo","teamOnePlayerOne","teamOnePlayerTwo","teamOnePlayerThree","teamOnePlayerFour","teamTwoPlayerOne","teamTwoPlayerTwo","teamTwoPlayerThree","teamTwoPlayerFour","inputs","setInputs","error","setError","validate","Keyboard","dismiss","handleError","navigate","handleOnChange","text","input","prevState","console","log","errorMessage","styles","container","scrollView","heading","innerContainer","width","toLocaleDateString","icon","i","parseInt","textLabel","map","num","brandText","JSON","stringify","StyleSheet","flex","paddingTop","StatusBar","currentHeight","backgroundColor","marginTop","padding","borderRadius","marginVertical","paddingHorizontal","position","top","right","justifyContent","alignItems","color","lightblue","dateContainer","borderWidth","margin","fontSize","fontWeight","inputStyle","flexDirection","textInput","button","paddingVertical","buttonText","lineHeight","letterSpacing"],"sources":["D:/Dev/bowling-score-card/src/screens/CreateGames.js"],"sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport { StyleSheet, Text, View, TextInput, Pressable, ScrollView, Button , SafeAreaView, StatusBar, Keyboard} from 'react-native';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Ionicons } from '@expo/vector-icons';\nimport GameContext from '../context/GameContext';\nimport Input from '../components/Input';\nimport Buttons from '../components/Buttons';\nimport COLORS from '../context/Colors';\n\nconst CreateGames = ({navigation}) => {\n  const {create} = useContext(GameContext);\n  const [numOfPlayers, setNumOfPlayers] = useState([])\n\n  // const [competitionName, setCompetitionName] = useState(\"\");\n  // const [rink, setRink] = useState(\"\");\n  // const [date, setDate] = useState(\"\");\n  // const [teamOne, setTeamOne] = useState(\"\");\n  // const [teamTwo, setTeamTwo] = useState(\"\");\n\n  // //Team Player hooks \n  // const [teamOnePlayerNames, setTeamOnePlayerNames] = useState([]);\n  // const updateTeamOnePlayers = (path, value) => {\n  //   setTeamOnePlayerNames({...teamOnePlayerNames, [path]: value});\n  // };\n  const [teamTwoPlayerNames, setTeamTwoPlayerNames] = useState([]);\n   const updateTeamTwoPlayers= (path, value) => {\n    setTeamTwoPlayerNames({...teamTwoPlayerNames, [path]: value});\n   };\n\n\n  const [selectedDate, setSelectedDate] = useState();\n  const [datePickerVisible, setDatePickerVisible] = useState(false);\n  const showDatePicker = () => {\n    setDatePickerVisible(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisible(false);\n  };\n\n  const handleConfirm = (date) => {\n    setSelectedDate(date);\n    hideDatePicker();\n  };\n  const [inputs, setInputs] = useState({\n    competitionName:\"\",\n    rink:\"\",\n    teamOne:\"\",\n    teamTwo:\"\",\n    teamOnePlayerOne:\"\",\n    teamOnePlayerTwo:\"\",\n    teamOnePlayerThree:\"\",\n    teamOnePlayerFour:\"\",\n    teamTwoPlayerOne:\"\",\n    teamTwoPlayerTwo:\"\",\n    teamTwoPlayerThree:\"\",\n    teamTwoPlayerFour:\"\",\n  });\n\n  const [error, setError] = useState({});\n  const validate = () => {\n    Keyboard.dismiss();\n    if(!inputs.competitionName){\n      handleError(\"Please input competition name\", 'competitionName');\n    }\n    if(!inputs.rink){\n      handleError(\"Please input rink no\", 'rink');\n    }\n    if(!inputs.teamOne){\n      handleError(\"Please input first team name\", 'teamOne');\n    }\n    if(!inputs.teamTwo){\n      handleError(\"Please input second team name\", 'teamTwo');\n    }\n    if(!inputs.teamOnePlayerOne){\n      handleError(\"Please input first players name\", 'teamOnePlayerOne');\n    }\n    if(!inputs.teamTwoPlayerOne){\n      handleError(\"Please input first players name\", 'teamTwoPlayerTwo');\n    }\n    else {\n    create(\n      inputs.competitionName, \n      inputs.rink,\n      inputs.teamOne,\n      inputs.teamTwo, \n      inputs.teamOnePlayerOne, \n      inputs.teamOnePlayerTwo,\n      inputs.teamOnePlayerThree,\n      inputs.teamOnePlayerFour,\n      inputs.teamTwoPlayerOne, \n      inputs.teamTwoPlayerTwo,\n      inputs.teamTwoPlayerThree,\n      inputs.teamTwoPlayerFour,\n      navigation.navigate(\"Previous Games\"));\n    }\n  }; \n\n  const handleOnChange = (text, input) => {\n    setInputs(prevState =>({...prevState, [input]: text}));\n    console.log(\"print text\")\n    console.log(text)\n\n  };\n\n  const handleError = (errorMessage, input) => {\n    setError(prevState =>({...prevState, [input]: errorMessage }))\n  };\n  console.log(\"inputs\")\n  console.log(inputs.teamOnePlayerOne)\n\n  useEffect (() => {\n\n\n  },[numOfPlayers]) \n\n    return (\n      <SafeAreaView style={styles.container}>\n        <ScrollView style={styles.scrollView}>\n        <Text style={styles.heading}> Create your game </Text>\n          <View style={styles.innerContainer}>\n\n            <Input \n              label=\"Competition\" \n              placeholder=\"Enter competition name\"\n              returnKeyType={'done'}\n              error={error.competitionName}\n              onChangeText={(text) => handleOnChange(text, 'competitionName' )}\n              />\n            \n            <Input \n              label=\"Rink No\" \n              keyboardType=\"numeric\"\n              returnKeyType={'done'}\n              placeholder=\"Type rink number\"\n              error={error.rink}\n              onChangeText={(text) => handleOnChange(text, 'rink' )}\n              />\n\n            <Input \n                label=\"First team name\" \n                returnKeyType={'done'}\n                placeholder=\"Enter team name\" \n                error={error.teamOne}\n                onChangeText={(text) => handleOnChange(text, 'teamOne' )}\n              />\n\n            <Input \n                label=\"Second team name\" \n                returnKeyType={'next'}\n                placeholder=\"Enter team name\" \n                error={error.teamTwo}\n                onChangeText={(text) => handleOnChange(text, 'teamTwo' )}\n                />\n\n              <View style={{}}>\n                <Input \n                  style={{width:'100%'}}\n                  label=\"Select a date\"\n                  onChangeText={(text) => handleOnChange(text, 'date' )}\n                  placeholder={selectedDate ? selectedDate.toLocaleDateString() : 'Select a date'}\n                  />\n                <DateTimePickerModal\n                  isVisible={datePickerVisible}\n                  mode=\"date\"\n                  locale=\"en_GB\"\n                  onConfirm={handleConfirm}\n                  onCancel={hideDatePicker}\n                  />\n               <Ionicons  name=\"calendar-sharp\" size={32} style={styles.icon} color=\"black\" onPress={showDatePicker}/>\n            </View>  \n           \n            <Input\n            label=\"Select Players\"\n            placeholder=\"Type players name\"\n            keyboardType=\"numeric\"\n            onChangeText={(text) =>{ {\n              for(let i=0; i < parseInt(text); i++) {\n              setNumOfPlayers(...numOfPlayers, i)\n            }}\n          }}\n            \n            />\n\n            <Text>{numOfPlayers}</Text>\n            <Text style={styles.textLabel}> Team Player names:  </Text>\n                            {numOfPlayers.map(num => \n                                <TextInput key={`${num}`}\n                                  returnKeyType={'done'}\n                                  autoFocus = {true}\n                                  placeholder=\"Type players name\" value={teamTwoPlayerNames[`teamTwoPlayer${num}`]}\n                                  onChangeText={(text) => {\n                                updateTeamTwoPlayers(`teamTwoPlayer${num}`, text);\n                              }}/>\n                              \n                              )\n                        }\n\n\n                      <Text style={styles.brandText}> {JSON.stringify(teamTwoPlayerNames)}</Text>\n                      <Input \n                      label=\"First team Players\"\n                        returnKeyType={'next'}\n                        // autoFocus = {true}\n                        id=\"ftPlayer1\"\n                        placeholder=\"Type first team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamOnePlayerOne')}\n\n                        />  \n                                  \n                      {/* <Input \n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type first team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamOnePlayerTwo')}                      \n                        />\n                        <Input \n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type first team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamOnePlayerThree')}\n                        \n                       \n                        />                 \n                      <Input \n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type first team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamOnePlayerFour')}                      \n                        /> */}\n\n  \n                               \n                      <Input \n                        label=\"Second team players\"\n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type second team players name\"\n                        id=\"stPlayer2\"\n                        onChangeText={(text) => handleOnChange(text, 'teamTwoPlayerOne')}\n                        />\n                   \n                      {/* <Input \n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type second team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamTwoPlayerTwo')}\n                        />\n                        <Input \n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type second team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamTwoPlayerThree')}\n                        />\n                   \n                      <Input \n                        returnKeyType={'next'}\n                        autoFocus = {true}\n                        placeholder=\"Type second team players name\"\n                        onChangeText={(text) => handleOnChange(text, 'teamTwoPlayerFour')}\n                        /> */}\n\n            <Buttons title=\"Submit\" onPress={() => { \n              validate() \n                }}\n            />\n\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: '1', \n    paddingTop: StatusBar.currentHeight,\n  },\n  innerContainer:{\n    backgroundColor: 'white',\n    marginTop:10,\n    padding:15,\n    borderRadius:10,\n    marginVertical:20\n  },\n  scrollView: {\n    paddingTop:30,\n    paddingHorizontal: 20,\n  },\n  icon:{\n    position:'absolute',\n    top:38,\n    right:1,\n   justifyContent:'center', \n   alignItems:'center',\n   color:COLORS.lightblue\n  },\n  dateContainer: {\n    width:'50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth:1,\n    margin:0,\n    padding:8\n  },\n   \n  heading: {\n    fontSize:32,\n    color:'black',\n    fontWeight: 'bold',\n  },\n\n  inputStyle:{ \n    flex:1,\n    flexDirection:'column',\n    justifyContent:'flex-start',\n    alignItems:'flex-start',\n  },\n\n  textInput: {\n    fontSize:20,\n    padding:10,\n    margin:5,\n    borderWidth:1,\n  },\n  textLabel: {\n    fontSize:18,\n    color:'grey',\n    marginVertical:10\n  },\n\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical:10,\n    paddingHorizontal: 24,\n    borderRadius: 5,\n    backgroundColor: '#3dcf8e',\n    margin:5\n  },\n  buttonText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'black',\n  },\n  });\n\nexport default CreateGames;\n\n/*\n<Button style={styles.button} >\n          \n          title=\"Submit Item\" onPress={() => {\n           // callback({competitionName:competitionName, rink:rink, });\n            //navigation.pop();\n        }}\n        </Button> \n        */"],"mappings":"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"},"metadata":{},"sourceType":"module"}